import { HashSet } from "./hashmap.js";

export default function testHashSet() {
  console.log("Testing hash set implementation.");
  const hashSet = new HashSet();
  // This list of strings was generated by ChatGPT 4o mini with the
  // prompt "Generate a list of strings to store in a hash set for
  // testing"
  hashSet.set("apple");
  hashSet.set("banana");
  hashSet.set("cherry");
  hashSet.set("date");
  hashSet.set("elderberry");
  hashSet.set("fig");
  hashSet.set("grape");
  hashSet.set("honeydew");
  hashSet.set("kiwi");
  hashSet.set("lemon");
  hashSet.set("mango");
  hashSet.set("nectarine");

  console.log(
    "Add as many keys as possible without going over the load factor:",
  );
  console.log(hashSet.buckets);

  hashSet.set("mango");
  hashSet.set("cherry");
  console.log("Added 'mango', and 'cherry' keys again:");
  console.log(hashSet.buckets);

  hashSet.set("lambda");
  console.log("Surpassed load factor with 'lambda' key:");
  console.log(hashSet.buckets);

  console.log(`Testing has("lambda"): ${hashSet.has("lambda")}`);
  console.log(`Testing has("lol") (non-existent): ${hashSet.has("lol")}`);

  console.log(`Testing remove("lambda"): ${hashSet.remove("lambda")}`);
  console.log(
    `Testing remove("quite") (non-existent): ${hashSet.remove("quite")}`,
  );
  console.log(hashSet.buckets);

  console.log(`Testing length(): ${hashSet.length()}`);
  console.log(hashSet.buckets);
  hashSet.set("axolotl");
  console.log(
    `Added 'axolotl' and testing length() again: ${hashSet.length()}`,
  );
  console.log(hashSet.buckets);

  console.log("Testing keys():");
  console.log(hashSet.keys());

  hashSet.clear();
  console.log("Called clear() and now testing it with keys():");
  console.log(hashSet.keys());
}
